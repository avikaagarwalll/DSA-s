 // Design Front Middle Back Queue

 class FrontMiddleBackQueue {
       LinkedList<Integer> queue;
    public FrontMiddleBackQueue() {
     queue = new LinkedList ();
    }
    
    public void pushFront(int val) {
        queue.addFirst(val);
    }
    
    public void pushMiddle(int val) {
        queue.add(queue.size()/2 , val);
    }
    
    public void pushBack(int val) {
        queue.addLast(val);
    }
    
    public int popFront() {
        if(queue.isEmpty()){
            return -1;
           
        }
         return queue.removeFirst();
    }
    
    public int popMiddle() {
        if(queue.isEmpty()){
            return -1;
           
        }
        return queue.remove((queue.size()-1)/2);
        
    }
    
    public int popBack() {
        if(queue.isEmpty()){
            return -1;
           
        }
        return queue.removeLast();
        
    }
}

/**
 * Your FrontMiddleBackQueue object will be instantiated and called as such:
 * FrontMiddleBackQueue obj = new FrontMiddleBackQueue();
 * obj.pushFront(val);
 * obj.pushMiddle(val);
 * obj.pushBack(val);
 * int param_4 = obj.popFront();
 * int param_5 = obj.popMiddle();
 * int param_6 = obj.popBack();
 */
